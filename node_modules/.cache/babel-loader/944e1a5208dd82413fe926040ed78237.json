{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Lab4/lab4_react/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport List from \"./components/List\";\nimport WithLoadingList from \"./components/WithLoadingList\";\nimport './App.css';\nimport { deleteFetch, getFetch, postFetch, putFetch } from \"./components/FetchMethods\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const LoadingList = WithLoadingList(List);\n  const [appStateLoading, setAppStateLoading] = useState(false);\n  const [appStateObject, setAppStateObject] = useState(null); //  const [name, setName] = useState(\"\");\n  //  const [message1, setMessage1] = useState(\"\");\n\n  const [refresh, setRefresh] = useState(true); //  const [nameEdit, setNameEdit] = useState(\"\");\n  //  const [idEdit, setIdEdit] = useState(\"\");\n  //  const [message2, setMessage2] = useState(\"\");\n  //  const [idDelete, setIdDelete] = useState(\"\");\n  //  const [message3, setMessage3] = useState(\"\");\n\n  useEffect(() => {\n    //  if (refresh) {\n    setAppStateLoading(true);\n    getFetch(\"movies\").then(val => setAppStateObject(val));\n    setAppStateLoading(false);\n    setRefresh(false); //  }\n  }, [setAppStateObject, setAppStateLoading, refresh]);\n  /*  const handleSubmit = async (e) => {\n      e.preventDefault();\n      try {\n        postFetch(\"medicines\", {name: name}).then(() => {\n          setName(\"\");\n          setMessage1(\"Creado correctamente\");\n          setRefresh(true);\n        });\n      } catch (err) {\n        console.log(err)\n      }\n    }\n  \n    const handleEdit = async (e) => {\n      e.preventDefault();\n      try {\n        putFetch(`medicines/${idEdit}`, {name: nameEdit}).then(() => {\n          setNameEdit(\"\");\n          setIdEdit(\"\");\n          setMessage2(\"Editado correctamente\");\n          setRefresh(true);\n        })\n      } catch (err) {\n        console.log(err)\n      }\n    }\n  \n    //arrow function\n    const handleDelete = async (e) => {\n      e.preventDefault();\n      try {\n        deleteFetch(`medicines/${idDelete}`).then((e) => {\n          setIdDelete(\"\");\n          setRefresh(true);\n          setMessage3(\"Eliminado correctamente\");\n        })\n      } catch (err) {\n        console.log(err);\n      }\n    }**/\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        borderStyle: \"dashed\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"First-Title\",\n        children: \"Primera conexi\\xF3n API local\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(LoadingList, {\n        isLoading: appStateLoading,\n        contents: appStateObject\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"ndu62pjV77bmOW0T8Q7jG3Z7UzA=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","List","WithLoadingList","deleteFetch","getFetch","postFetch","putFetch","App","LoadingList","appStateLoading","setAppStateLoading","appStateObject","setAppStateObject","refresh","setRefresh","then","val","borderStyle"],"sources":["/mnt/c/Lab4/lab4_react/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport List from \"./components/List\"\nimport WithLoadingList from \"./components/WithLoadingList\";\nimport './App.css'\nimport { deleteFetch, getFetch, postFetch, putFetch } from \"./components/FetchMethods\";\n\nfunction App() {\nconst LoadingList = WithLoadingList(List);\n\n const [appStateLoading, setAppStateLoading] = useState(false)\n const [appStateObject, setAppStateObject] = useState(null)\n\n//  const [name, setName] = useState(\"\");\n//  const [message1, setMessage1] = useState(\"\");\n  const [refresh, setRefresh] = useState(true);\n\n//  const [nameEdit, setNameEdit] = useState(\"\");\n//  const [idEdit, setIdEdit] = useState(\"\");\n//  const [message2, setMessage2] = useState(\"\");\n\n//  const [idDelete, setIdDelete] = useState(\"\");\n//  const [message3, setMessage3] = useState(\"\");\n\n  useEffect(() => {\n  //  if (refresh) {\n      setAppStateLoading(true);\n      getFetch(\"movies\").then(val => setAppStateObject(val))\n      setAppStateLoading(false);\n      setRefresh(false);\n  //  }\n    \n  }, [setAppStateObject, setAppStateLoading, refresh])\n\n/*  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      postFetch(\"medicines\", {name: name}).then(() => {\n        setName(\"\");\n        setMessage1(\"Creado correctamente\");\n        setRefresh(true);\n      });\n    } catch (err) {\n      console.log(err)\n    }\n  }\n\n  const handleEdit = async (e) => {\n    e.preventDefault();\n    try {\n      putFetch(`medicines/${idEdit}`, {name: nameEdit}).then(() => {\n        setNameEdit(\"\");\n        setIdEdit(\"\");\n        setMessage2(\"Editado correctamente\");\n        setRefresh(true);\n      })\n    } catch (err) {\n      console.log(err)\n    }\n  }\n\n  //arrow function\n  const handleDelete = async (e) => {\n    e.preventDefault();\n    try {\n      deleteFetch(`medicines/${idDelete}`).then((e) => {\n        setIdDelete(\"\");\n        setRefresh(true);\n        setMessage3(\"Eliminado correctamente\");\n      })\n    } catch (err) {\n      console.log(err);\n    }\n  }**/\n\n  return (\n    <div class=\"App\">\n      <div style={{borderStyle: \"dashed\"}}>\n        <h2 className=\"First-Title\">Primera conexi√≥n API local</h2>\n      </div>\n      <div>\n        <LoadingList isLoading={appStateLoading} contents={appStateObject}/>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,eAAP,MAA4B,8BAA5B;AACA,OAAO,WAAP;AACA,SAASC,WAAT,EAAsBC,QAAtB,EAAgCC,SAAhC,EAA2CC,QAA3C,QAA2D,2BAA3D;;;AAEA,SAASC,GAAT,GAAe;EAAA;;EACf,MAAMC,WAAW,GAAGN,eAAe,CAACD,IAAD,CAAnC;EAEC,MAAM,CAACQ,eAAD,EAAkBC,kBAAlB,IAAwCX,QAAQ,CAAC,KAAD,CAAtD;EACA,MAAM,CAACY,cAAD,EAAiBC,iBAAjB,IAAsCb,QAAQ,CAAC,IAAD,CAApD,CAJc,CAMf;EACA;;EACE,MAAM,CAACc,OAAD,EAAUC,UAAV,IAAwBf,QAAQ,CAAC,IAAD,CAAtC,CARa,CAUf;EACA;EACA;EAEA;EACA;;EAEEC,SAAS,CAAC,MAAM;IAChB;IACIU,kBAAkB,CAAC,IAAD,CAAlB;IACAN,QAAQ,CAAC,QAAD,CAAR,CAAmBW,IAAnB,CAAwBC,GAAG,IAAIJ,iBAAiB,CAACI,GAAD,CAAhD;IACAN,kBAAkB,CAAC,KAAD,CAAlB;IACAI,UAAU,CAAC,KAAD,CAAV,CALY,CAMhB;EAEC,CARQ,EAQN,CAACF,iBAAD,EAAoBF,kBAApB,EAAwCG,OAAxC,CARM,CAAT;EAUF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEE,oBACE;IAAK,KAAK,EAAC,KAAX;IAAA,wBACE;MAAK,KAAK,EAAE;QAACI,WAAW,EAAE;MAAd,CAAZ;MAAA,uBACE;QAAI,SAAS,EAAC,aAAd;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QADF,eAIE;MAAA,uBACE,QAAC,WAAD;QAAa,SAAS,EAAER,eAAxB;QAAyC,QAAQ,EAAEE;MAAnD;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QAJF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAUD;;GA9EQJ,G;;KAAAA,G;AAgFT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}