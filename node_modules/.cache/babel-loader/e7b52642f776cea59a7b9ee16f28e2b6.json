{"ast":null,"code":"async function getFetch(path) {\n  let urlApi = process.env.REACT_APP_API_URL;\n  let response = await fetch(`${urlApi}/${path}`);\n  return (await response).json();\n}\n\nasync function postFetch(path, body) {\n  let urlApi = process.env.REACT_APP_API_URL;\n  let response = await fetch(`${urlApi}/${path}`, {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(body)\n  });\n  return (await response).json();\n}\n\nasync function putFetch(path, body) {\n  let urlApi = process.env.REACT_APP_API_URL;\n  let response = await fetch(`${urlApi}/${path}`, {\n    method: 'PUT',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(body)\n  });\n  return (await response).json();\n}\n\nasync function deleteFetch(path) {\n  let urlApi = process.env.REACT_APP_API_URL;\n  let response = await fetch(`${urlApi}/${path}`, {\n    method: 'DELETE'\n  });\n  return (await response).json();\n}\n\nexport { getFetch, postFetch, putFetch, deleteFetch };","map":{"version":3,"names":["getFetch","path","urlApi","process","env","REACT_APP_API_URL","response","fetch","json","postFetch","body","method","headers","JSON","stringify","putFetch","deleteFetch"],"sources":["/Users/diegoalfaro/projects/U/IF4101/lab_4/lab4_react/src/components/FetchMethods.js"],"sourcesContent":["\nasync function getFetch(path) {\n  let urlApi = process.env.REACT_APP_API_URL\n  let response = await fetch(`${urlApi}/${path}`)\n  return (await response).json()\n}\n\nasync function postFetch(path, body) {\n  let urlApi = process.env.REACT_APP_API_URL\n  let response = await fetch(`${urlApi}/${path}`, {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(body)\n  })\n  return (await response).json()\n}\n\nasync function putFetch(path, body) {\n  let urlApi = process.env.REACT_APP_API_URL\n  let response = await fetch(`${urlApi}/${path}`, {\n    method: 'PUT',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(body)\n  })\n  return (await response).json()\n}\n\nasync function deleteFetch(path) {\n  let urlApi = process.env.REACT_APP_API_URL\n  let response = await fetch(`${urlApi}/${path}`, {\n    method: 'DELETE',\n  })\n  return (await response).json()\n}\n\nexport { getFetch, postFetch, putFetch, deleteFetch }"],"mappings":"AACA,eAAeA,QAAf,CAAwBC,IAAxB,EAA8B;EAC5B,IAAIC,MAAM,GAAGC,OAAO,CAACC,GAAR,CAAYC,iBAAzB;EACA,IAAIC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEL,MAAO,IAAGD,IAAK,EAAnB,CAA1B;EACA,OAAO,CAAC,MAAMK,QAAP,EAAiBE,IAAjB,EAAP;AACD;;AAED,eAAeC,SAAf,CAAyBR,IAAzB,EAA+BS,IAA/B,EAAqC;EACnC,IAAIR,MAAM,GAAGC,OAAO,CAACC,GAAR,CAAYC,iBAAzB;EACA,IAAIC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEL,MAAO,IAAGD,IAAK,EAAnB,EAAsB;IAC9CU,MAAM,EAAE,MADsC;IAE9CC,OAAO,EAAE;MACP,UAAU,kBADH;MAEP,gBAAgB;IAFT,CAFqC;IAM9CF,IAAI,EAAEG,IAAI,CAACC,SAAL,CAAeJ,IAAf;EANwC,CAAtB,CAA1B;EAQA,OAAO,CAAC,MAAMJ,QAAP,EAAiBE,IAAjB,EAAP;AACD;;AAED,eAAeO,QAAf,CAAwBd,IAAxB,EAA8BS,IAA9B,EAAoC;EAClC,IAAIR,MAAM,GAAGC,OAAO,CAACC,GAAR,CAAYC,iBAAzB;EACA,IAAIC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEL,MAAO,IAAGD,IAAK,EAAnB,EAAsB;IAC9CU,MAAM,EAAE,KADsC;IAE9CC,OAAO,EAAE;MACP,gBAAgB;IADT,CAFqC;IAK9CF,IAAI,EAAEG,IAAI,CAACC,SAAL,CAAeJ,IAAf;EALwC,CAAtB,CAA1B;EAOA,OAAO,CAAC,MAAMJ,QAAP,EAAiBE,IAAjB,EAAP;AACD;;AAED,eAAeQ,WAAf,CAA2Bf,IAA3B,EAAiC;EAC/B,IAAIC,MAAM,GAAGC,OAAO,CAACC,GAAR,CAAYC,iBAAzB;EACA,IAAIC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEL,MAAO,IAAGD,IAAK,EAAnB,EAAsB;IAC9CU,MAAM,EAAE;EADsC,CAAtB,CAA1B;EAGA,OAAO,CAAC,MAAML,QAAP,EAAiBE,IAAjB,EAAP;AACD;;AAED,SAASR,QAAT,EAAmBS,SAAnB,EAA8BM,QAA9B,EAAwCC,WAAxC"},"metadata":{},"sourceType":"module"}